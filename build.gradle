apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'jetty'



repositories {
    mavenCentral()
}


dependencies {
    compile(
            'org.springframework:spring-webmvc:4.0.6.RELEASE',
            'org.springframework:spring-mock:2.0.8',
            'com.google.code.gson:gson:2.2.4',
            'mysql:mysql-connector-java:5.1.31',
            'commons-dbcp:commons-dbcp:1.4',
            'org.springframework:spring-jdbc:4.0.6.RELEASE',
            'org.codehaus.jackson:jackson-core-asl:1.9.13',
            'org.codehaus.jackson:jackson-mapper-asl:1.9.13',
            'jstl:jstl:1.2',
            'javax.servlet:javax.servlet-api:3.0.1',
            'org.springframework:spring-orm:4.1.0.RELEASE',
            'org.slf4j:slf4j-api:1.7.7',
            'org.hibernate:hibernate-core:4.3.6.Final',

    )
    testCompile 'junit:junit:4.10'
    testCompile 'org.mockito:mockito-all:1.9.5'
    testCompile 'org.springframework:spring-test:4.0.5.RELEASE'
    testCompile 'org.mockito:mockito-all:1.8.5'
    testCompile 'org.hamcrest:hamcrest-all:1.1'

}

task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}

task "createJavaProject" << {
        sourceSets*.java.srcDirs*.each { it.mkdirs() }
        sourceSets*.resources.srcDirs*.each { it.mkdirs() }

    }

task createWebProject(dependsOn: 'createJavaProject') << {
    def webAppDir = file("$webAppDirName")
    webAppDir.mkdirs()
}


sourceSets {
    integTest {
        java.srcDir file('src/integTest/java')
        resources.srcDir file('src/integTest/resources')

    }

}

task integTest(type: Test) {
    testClassesDir = sourceSets.integTest.output.classesDir
    classpath = sourceSets.integTest.runtimeClasspath
}

dependencies {
    integTestCompile sourceSets.main.output
    integTestCompile configurations.testCompile
    integTestCompile sourceSets.test.output
    integTestRuntime configurations.testRuntime
}